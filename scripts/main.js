// Generated by CoffeeScript 1.6.2
var MovesCtrl, Player, PlayersList, TeamCtrl, startingPlayersJson, substitutePlayersJson,
  __slice = [].slice;

startingPlayersJson = [
  {
    firstName: "Miguel",
    lastName: "Camba",
    number: "11"
  }, {
    firstName: "Juan",
    lastName: "Caamaño",
    number: "7"
  }, {
    firstName: "Carlos",
    lastName: "Escaloni",
    number: "2"
  }, {
    firstName: "Yago",
    lastName: "Novoa",
    number: "5"
  }
];

substitutePlayersJson = [
  {
    firstName: "Pedro",
    lastName: "Fraile",
    number: "10"
  }, {
    firstName: "Roberto",
    lastName: "Fernandez",
    number: "4"
  }, {
    firstName: "Borja",
    lastName: "Regueira",
    number: "6"
  }
];

Player = (function() {
  Player.prototype.firstName = null;

  Player.prototype.lastName = null;

  Player.prototype.number = null;

  Player.prototype.hovered = false;

  function Player() {
    var args, json, nameComponents;

    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    if (args.length === 1) {
      json = args[0];
      this.firstName = json.firstName;
      this.lastName = json.lastName;
      this.number = json.number;
    } else if (args.length === 2) {
      nameComponents = args[0].split(" ");
      this.firstName = nameComponents[0];
      this.lastName = nameComponents[1];
      this.number = args[1];
    }
  }

  Player.prototype.fullName = function() {
    return this.firstName + " " + this.lastName;
  };

  return Player;

})();

PlayersList = (function() {
  PlayersList.prototype.name = null;

  PlayersList.prototype.maxSize = null;

  PlayersList.prototype.players = [];

  function PlayersList(name, maxSize, players) {
    this.name = name;
    this.maxSize = maxSize;
    this.players = players != null ? players : [];
  }

  PlayersList.prototype.size = function() {
    return this.players.length;
  };

  PlayersList.prototype.isFull = function() {
    return this.size() >= this.maxSize;
  };

  return PlayersList;

})();

TeamCtrl = function($scope) {
  $scope.playersLists = [
    new PlayersList("Starting Players", 6, startingPlayersJson.map(function(el) {
      return new Player(el);
    })), new PlayersList("Substitute Players", 4, substitutePlayersJson.map(function(el) {
      return new Player(el);
    }))
  ];
  $scope.allListsFull = function() {
    return $scope.playersLists.every(function(list) {
      return list.isFull();
    });
  };
  $scope.addPlayer = function() {
    var newPlayer, startingPlayers, substitutePlayers;

    startingPlayers = $scope.playersLists[0];
    substitutePlayers = $scope.playersLists[1];
    newPlayer = new Player($scope.playerFullName, $scope.playerNumber);
    if (startingPlayers.isFull() === false) {
      startingPlayers.players.push(newPlayer);
    } else {
      substitutePlayers.players.push(newPlayer);
    }
    $scope.playerFullName = "";
    return $scope.playerNumber = "";
  };
  return $scope.deletePlayer = function() {
    var index, playersList, _i, _len, _ref, _results;

    _ref = $scope.playersLists;
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      playersList = _ref[_i];
      index = playersList.players.indexOf(this.player);
      if (index > -1) {
        _results.push(playersList.players.splice(index, 1));
      } else {
        _results.push(void 0);
      }
    }
    return _results;
  };
};

MovesCtrl = function($scope) {
  return $scope.moves = [
    {
      time: "42:15",
      description: "Juan García despeja con los puños un corner peligroso! Eso ha estado cerca"
    }, {
      time: "39:15",
      description: "Roberto Fernandez ha iniciado un contragolpe que a punto ha estado de acabar en gol de no ser por la aparición de un contrario"
    }, {
      time: "23:55",
      description: "Gol! Gol! Gol! Magistral jugada de Pedro Fraile por la banda que ha encontrado a Gelo desmarcado listo para sentenciar de cabeza"
    }
  ];
};
